/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mss.ediscv.util;
import java.io.File;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.NoSuchProviderException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.mail.Multipart;
import javax.mail.BodyPart;
import javax.mail.internet.AddressException;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMultipart;
import java.util.Properties;
import java.util.StringTokenizer;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.Authenticator;
import javax.mail.PasswordAuthentication;

/**
 *
 * @author miracle1
 */
public class MailManager {
    private static final String SMTP_AUTH_USER = "kiran.m@Miraclesoft.com";
     private static final String SMTP_AUTH_PWD  = "firewall";
     private static final String SMTP_HOST  = "smtpcorp.com";
     private static final String PORT="2525";
     
     public static void sendUserIdPwd(String loginId,String userName,String password) {
         
        // SUBSTITUTE YOUR EMAIL ADDRESSES HERE!!!
        /** The to is used for storing the user mail id to send details. */
        String to = loginId+"@miraclesoft.com";
        
        /** The from is used for storing the from address. */
        String from = "hubbleapp@miraclesoft.com";
        
        // SUBSTITUTE YOUR ISP'S MAIL SERVER HERE!!!
        
        /**The host is used for storing the IP address of mail */
    
        /**The props is instance variabel to <code>Properties</code> class */
        Properties props = new Properties();
        
        /**Here set smtp protocal to props */
        props.setProperty("mail.transport.protocol", "smtp");
        
        //**Here set the address of the host to props */
        props.setProperty("mail.host", SMTP_HOST);
        
        /** Here set the authentication for the host **/
          props.put("mail.smtp.auth", "true");
         props.put("mail.smtp.port", PORT);
        Authenticator auth = new SMTPAuthenticator();
       // Session mailSession = Session.getDefaultInstance(props, null);
        Session mailSession = Session.getDefaultInstance(props, auth);
        mailSession.setDebug(true);
        Transport transport;
        try {
            transport = mailSession.getTransport();
            MimeMessage message = new MimeMessage(mailSession);
            message.setSubject("Miracle Supply Chain Visibility Portal Password Details");
            message.setFrom(new InternetAddress(from));
            message.addRecipient(Message.RecipientType.TO,new InternetAddress(to));
            message.addRecipient(Message.RecipientType.BCC,new InternetAddress("nseerapu@miraclesoft.com"));
            
            
            // This HTML mail have to 2 part, the BODY and the embedded image
            //
            MimeMultipart multipart = new MimeMultipart("related");
            
            // first part  (the html)
            BodyPart messageBodyPart = new MimeBodyPart();
            StringBuilder htmlText = new StringBuilder();
               htmlText.append("<html><head><title>Mail From Miracle Suuply Chain Visibility Portal</title>");
                htmlText.append("</head><body><font color='blue' size='2' face='Arial'>");
                htmlText.append("<p>Hello "+userName+"</p>");
                
                htmlText.append("<p><u><b>Your Login Details :</b></u><br><br>");
                htmlText.append("Login Id : <b>"+loginId+"</b><br>");
                htmlText.append("Password : <b>"+password+"</b><br><br>");
                htmlText.append("URL :&nbsp;&nbsp;&nbsp;&nbsp;");
               
                htmlText.append("<a href='#'>");
                htmlText.append("192.168.1.179:8084/ediscv</a><br><br>");
                
                htmlText.append("<b>Please Note:</b><br>");
                htmlText.append("To better protect ");
                htmlText.append("your account, make sure that your password is memorable ");
                htmlText.append("for you but difficult for others to guess. Never ");
                htmlText.append("use the same password that you have used in the past,");
                htmlText.append(" and do not share your password with anyone.<br></br><br>");
                htmlText.append("<b>Regards,</b><br>");
                htmlText.append("Miracle Supply Chain Visibility Portal Team,</p></font><br>");
                htmlText.append("<font color='red', size='2' face='Arial'>*Note:Please do not reply to this e-mail.  It was generated by our System.</font>");
                htmlText.append("</body></html>");
            
            messageBodyPart.setContent(htmlText.toString(), "text/html");
            
            // add it
            multipart.addBodyPart(messageBodyPart);
            
            // second part (the image)
            //messageBodyPart = new MimeBodyPart();
            //DataSource fds = new FileDataSource("C:\\Documents and Settings\\miracle1\\Desktop\\ProjectFiles\\Mailer\\mailTemplate_600x800.jpg");
           // messageBodyPart.setDataHandler(new DataHandler(fds));
           // messageBodyPart.setHeader("Content-ID","<image>");
            
            // add it
            //multipart.addBodyPart(messageBodyPart);
            
            // put everything together
            message.setContent(multipart);
            
            transport.connect();
            transport.sendMessage(message,
                    message.getRecipients(Message.RecipientType.TO));
            transport.sendMessage(message,
                    message.getRecipients(Message.RecipientType.BCC));
            transport.close();
        } catch (NoSuchProviderException ex) {
            ex.printStackTrace();
        }  catch (MessagingException ex) {
            ex.printStackTrace();
        }
        
    }
      
     /**
      * @param assignedBy
      * @param assignTo
      * @param category
      * @param priority
      * @param devTime
      * @param summary
      * @param desc
      * @throws ServiceLocatorException 
      */
     public static void sendCreatedIssueDetails(String assignedBy,String assignTo,String category,String priority,String devTime,String summary,String desc) throws ServiceLocatorException {
        
   

        String cc= assignedBy+"@miraclesoft.com";
        String from = "hubbleapp@miraclesoft.com";
   
        Properties props = new Properties();
        
        /**Here set smtp protocal to props */
        props.setProperty("mail.transport.protocol", "smtp");
        
        //**Here set the address of the host to props */
        props.setProperty("mail.host", SMTP_HOST);
         /** Here set the authentication for the host **/
        props.put("mail.smtp.auth", "true");
         
        Authenticator auth = new SMTPAuthenticator();
      //  Session mailSession = Session.getDefaultInstance(props, null);
        Session mailSession = Session.getDefaultInstance(props, auth);
        mailSession.setDebug(true);
        Transport transport;
        try {
            transport = mailSession.getTransport();
            MimeMessage message = new MimeMessage(mailSession);
            message.setSubject("Reg : Miracle Supply Chain Visibility Portal Issue Assigned ");
            message.setFrom(new InternetAddress(from));
            StringTokenizer st = new StringTokenizer(assignTo, ",");
            while(st.hasMoreTokens())
            {
             message.addRecipient(Message.RecipientType.TO,new InternetAddress(st.nextToken()+"@miraclesoft.com"));
            }          
            message.addRecipient(Message.RecipientType.CC,new InternetAddress(cc));
            message.addRecipient(Message.RecipientType.BCC,new InternetAddress("atummapala@miraclesoft.com"));

            MimeMultipart multipart = new MimeMultipart("related");
            
            // first part  (the html)
            BodyPart messageBodyPart = new MimeBodyPart();
            StringBuilder htmlText = new StringBuilder();
           
                htmlText.append("<html><head><title>Mail from MSCVP</title>");
                htmlText.append("</head><body><font color='blue' size='2' face='Arial'>");
                htmlText.append("<p>Hello,</p>");
                htmlText.append("<p>These are the current issue details</p>");
                htmlText.append("<br>------------------------------------------------------<br>");
                htmlText.append("Category : "+category+"<br>");
                htmlText.append("Priority: "+priority+"<br>");
                htmlText.append("Development Time: "+devTime+"<br>");
                htmlText.append("Summary: "+summary+"<br>");
                htmlText.append("Description: <br>");
                htmlText.append("------------------------------------------------------<br>");
                htmlText.append(desc+"<br><br>");
                htmlText.append("To view more details of this issue, or to update it, please visit the following URL: http://74.218.204.46/ediscv/<br>");
                htmlText.append("<br>");
                htmlText.append("Thank you.</p></font>");
                htmlText.append("<font color='red', size='2' face='Arial'>*Note:Please do not reply to this e-mail.  It was generated by Issue Tracking System.</font>");
                htmlText.append("</body></html>");
       
            
            messageBodyPart.setContent(htmlText.toString(), "text/html");
            
            // add it
            multipart.addBodyPart(messageBodyPart);
            
            // put everything together
            message.setContent(multipart);
            
            transport.connect();
            transport.sendMessage(message,message.getRecipients(Message.RecipientType.TO));
             
            
            transport.sendMessage(message,message.getRecipients(Message.RecipientType.CC));
            //transport.sendMessage(message,message.getRecipients(Message.RecipientType.BCC));
            
            transport.sendMessage(message,message.getRecipients(Message.RecipientType.BCC));
            transport.close();
        } catch (NoSuchProviderException ex) {
            ex.printStackTrace();
        }  catch (MessagingException ex) {
            ex.printStackTrace();
        }
    }
     
       public static String sendMail(String loginId,String fname){
            String to =loginId;
            //String fname=filename; 
            System.out.println("EMAIL in sendMail==================================="+to);
              System.out.println("EMAIL in sendMail==================================="+fname);
     //  String oggedInEmpName = HttpServletRequest.getSession(false).getAttribute(AppConstants.SES_USER_NAME).toString();
       // String userName = httpServletRequest.getSession(false).getAttribute(AppConstants.SES_USER_NAME).toString();      
            //   System.out.println("EMAIL in sendMail==================================="+Username);
            //String to ="hbethireddy@miraclesoft.com";
            //String to =loginId+"@miraclesoft.com";
            String from = "hubbleapp@miraclesoft.com";      
            Properties props = new Properties();
            props.setProperty("mail.transport.protocol", "smtp");
            props.setProperty("mail.host", SMTP_HOST);
              props.put("mail.smtp.auth", "true");
             
         Authenticator auth = new SMTPAuthenticator();
           // Session mailSession = Session.getDefaultInstance(props, null);
            Session mailSession = Session.getDefaultInstance(props, auth);
            mailSession.setDebug(true);
            Transport transport;
           // WeekelyReport wrg= new DailyRepot();
            // String proPath="";
         String proPath = com.mss.ediscv.util.Properties.getProperty("mscvp.logisticsDocCreationPath")+fname;
            MimeMessage message = new MimeMessage(mailSession);
            try {
                transport = mailSession.getTransport();
               // MimeMessage message = new MimeMessage(mailSession);
                message.setSubject("Miracle Supply Chain Visibility Portal Status Report");
                message.setFrom(new InternetAddress(from));
             StringTokenizer st = new StringTokenizer(loginId, "|");
            while(st.hasMoreTokens())
            {
             message.addRecipient(Message.RecipientType.TO,new InternetAddress(st.nextToken()));
            } 
              //  message.addRecipient(Message.RecipientType.TO,new InternetAddress(to));
                message.addRecipient(Message.RecipientType.BCC,new InternetAddress("hbethireddy@miraclesoft.com"));

                MimeMultipart multipart = new MimeMultipart("related");
                
                // first part  (the html)
                BodyPart messageBodyPart = new MimeBodyPart();
                StringBuilder htmlText = new StringBuilder();
                   htmlText.append("<html><head><title>Mail From Miracle Suuply Chain Visibility Portal</title>");
                    htmlText.append("</head><body><font color='blue' size='2' face='Arial'>");
                   //htmlText.append("<p>Hello "+userName+",</p>");
                    htmlText.append("<p>Hello,</p>"); 
                    htmlText.append("<p><u><b>Please find the Weekely status report. :</b></u><br><br>");
                    //htmlText.append("Login Id : <b>hbethireddy</b><br>");
                    //htmlText.append("Password : <b>123</b><br><br>");
                   // htmlText.append("URL :&nbsp;&nbsp;&nbsp;&nbsp;");
                   
                // htmlText.append("<a href=\"../partner/getSchedularsearch.action\">Download</a></td></tr><br><br>");
                   // htmlText.append("74.218.204.46/ediscv</a><br><br>");
                 //htmlText.append("<a href=\"../download/getAttachment.action?locationAvailable="+proPath+"\">Download</a><br><br>");
                    //htmlText.append("<b>Please Find Attachment:</b><br><br>");
                   // htmlText.append("To better protect <br></br><br>");             
                    htmlText.append("<b>Regards,</b><br>");
                    htmlText.append("Miracle Supply Chain Visibility Portal Team,</p></font><br>");
                    htmlText.append("<font color='red', size='2' face='Arial'>*Note:Please do not reply to this e-mail.  It was generated by our System.</font>");
                    htmlText.append("</body></html>");
                
                messageBodyPart.setContent(htmlText.toString(), "text/html");
                 BodyPart messageBodyPart1 = new MimeBodyPart();
                
                DataSource source = new FileDataSource(proPath);
                messageBodyPart1.setDataHandler(new DataHandler(source));
                System.out.println("filename"+proPath);
                messageBodyPart1.setFileName(proPath.substring(proPath.lastIndexOf(File.separator)+1,proPath.length()));
                // add it .substring(filename.lastIndexOf(File.separator)+1,filename.length())
                multipart.addBodyPart(messageBodyPart);
                multipart.addBodyPart(messageBodyPart1);
                message.setContent(multipart);
                
                transport.connect();
                transport.sendMessage(message,
                        message.getRecipients(Message.RecipientType.TO));
                transport.sendMessage(message,
                        message.getRecipients(Message.RecipientType.BCC));
                transport.close();
            } catch (NoSuchProviderException ex) {
         
                ex.printStackTrace();
                return "failure";
            }  catch (MessagingException ex) {
                ex.printStackTrace();
                 return "failure";
            }
            
            return "succcess";
            
    }


      /**
       *  DESC: Mailing for Ticketing system :: send a alert to asigned users
       *  Method: send mail
       * 
       */
        private static class SMTPAuthenticator extends javax.mail.Authenticator {
        public PasswordAuthentication getPasswordAuthentication() {
           String username = SMTP_AUTH_USER;
           String password = SMTP_AUTH_PWD;
           return new PasswordAuthentication(username, password);
        }
    }
}
